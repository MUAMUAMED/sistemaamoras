# Script para criar reposit√≥rios separados - Amoras Capital
# Execute este script na raiz do projeto

Write-Host "üöÄ Criando reposit√≥rios separados para Amoras Capital..." -ForegroundColor Green
Write-Host ""

# Verificar se est√° na pasta correta
if (!(Test-Path "backend") -or !(Test-Path "frontend")) {
    Write-Host "‚ùå Execute este script na raiz do projeto (onde est√£o as pastas backend e frontend)!" -ForegroundColor Red
    exit 1
}

# Verificar se git est√° instalado
try {
    git --version | Out-Null
} catch {
    Write-Host "‚ùå Git n√£o est√° instalado! Instale o Git primeiro." -ForegroundColor Red
    exit 1
}

Write-Host "‚úÖ Verifica√ß√µes OK! Criando reposit√≥rios..." -ForegroundColor Green
Write-Host ""

# ================================
# CRIAR REPOSIT√ìRIO DO BACKEND
# ================================
Write-Host "üì¶ Configurando reposit√≥rio do Backend..." -ForegroundColor Blue

# Limpar pasta se existir
if (Test-Path "amoras-backend-repo") {
    Remove-Item -Recurse -Force "amoras-backend-repo"
}

# Criar pasta do backend
New-Item -ItemType Directory -Force -Path "amoras-backend-repo" | Out-Null
Set-Location "amoras-backend-repo"

# Inicializar git
git init | Out-Null

# Copiar arquivos do backend
Write-Host "üìã Copiando arquivos do backend..."
Copy-Item -Recurse -Force "../backend/*" "." -ErrorAction SilentlyContinue
Copy-Item -Force "../backend/.gitignore" "." -ErrorAction SilentlyContinue

# Copiar guias de instala√ß√£o
Copy-Item -Force "../GUIA_INSTALACAO_VPS_EASYPANEL.md" "." -ErrorAction SilentlyContinue
Copy-Item -Force "../easypanel-config.md" "." -ErrorAction SilentlyContinue
Copy-Item -Force "../RESUMO_DEPLOY_VPS.md" "." -ErrorAction SilentlyContinue

# Configurar git
git add . | Out-Null
git commit -m "üöÄ Initial commit - Amoras Capital Backend API

‚úÖ Node.js + TypeScript + Express
‚úÖ Prisma ORM + PostgreSQL  
‚úÖ JWT Authentication
‚úÖ CRM + ERP APIs
‚úÖ Swagger Documentation
‚úÖ Docker production ready
‚úÖ EasyPanel compatible

Backend completo para o sistema Amoras Capital" | Out-Null

Write-Host "‚úÖ Backend repository configurado!" -ForegroundColor Green
Write-Host ""
Write-Host "üîó Para conectar ao GitHub, execute:" -ForegroundColor Yellow
Write-Host "cd amoras-backend-repo" -ForegroundColor Gray
Write-Host "git remote add origin https://github.com/SEU_USUARIO/amoras-capital-backend.git" -ForegroundColor Gray
Write-Host "git branch -M main" -ForegroundColor Gray
Write-Host "git push -u origin main" -ForegroundColor Gray
Write-Host ""

# ================================
# CRIAR REPOSIT√ìRIO DO FRONTEND
# ================================
Set-Location ".."
Write-Host "üé® Configurando reposit√≥rio do Frontend..." -ForegroundColor Blue

# Limpar pasta se existir
if (Test-Path "amoras-frontend-repo") {
    Remove-Item -Recurse -Force "amoras-frontend-repo"
}

# Criar pasta do frontend
New-Item -ItemType Directory -Force -Path "amoras-frontend-repo" | Out-Null
Set-Location "amoras-frontend-repo"

# Inicializar git
git init | Out-Null

# Copiar arquivos do frontend
Write-Host "üìã Copiando arquivos do frontend..."
Copy-Item -Recurse -Force "../frontend/*" "." -ErrorAction SilentlyContinue
Copy-Item -Force "../frontend/.gitignore" "." -ErrorAction SilentlyContinue

# Configurar git
git add . | Out-Null
git commit -m "üé® Initial commit - Amoras Capital Frontend

‚úÖ React 18 + TypeScript
‚úÖ Tailwind CSS + Responsive Design
‚úÖ React Query + Axios
‚úÖ CRM + ERP Interface
‚úÖ Authentication + Protected Routes
‚úÖ Nginx + Docker production ready
‚úÖ EasyPanel compatible

Frontend completo para o sistema Amoras Capital" | Out-Null

Write-Host "‚úÖ Frontend repository configurado!" -ForegroundColor Green
Write-Host ""
Write-Host "üîó Para conectar ao GitHub, execute:" -ForegroundColor Yellow
Write-Host "cd amoras-frontend-repo" -ForegroundColor Gray
Write-Host "git remote add origin https://github.com/SEU_USUARIO/amoras-capital-frontend.git" -ForegroundColor Gray
Write-Host "git branch -M main" -ForegroundColor Gray
Write-Host "git push -u origin main" -ForegroundColor Gray
Write-Host ""

# Voltar √† pasta raiz
Set-Location ".."

# ================================
# RESUMO FINAL
# ================================
Write-Host "üéâ Reposit√≥rios criados com sucesso!" -ForegroundColor Green
Write-Host ""
Write-Host "üìÅ Pastas criadas:" -ForegroundColor Cyan
Write-Host "   üì¶ amoras-backend-repo/  - Backend repository" -ForegroundColor Gray
Write-Host "   üé® amoras-frontend-repo/ - Frontend repository" -ForegroundColor Gray
Write-Host ""

Write-Host "üìã Pr√≥ximos passos:" -ForegroundColor Cyan
Write-Host "1. üåê Criar reposit√≥rios no GitHub:" -ForegroundColor White
Write-Host "   - amoras-capital-backend" -ForegroundColor Gray
Write-Host "   - amoras-capital-frontend" -ForegroundColor Gray
Write-Host ""
Write-Host "2. üîó Conectar e fazer push dos reposit√≥rios (comandos acima)" -ForegroundColor White
Write-Host ""
Write-Host "3. ‚öôÔ∏è Configurar no EasyPanel:" -ForegroundColor White
Write-Host "   - Database: PostgreSQL 15" -ForegroundColor Gray
Write-Host "   - Backend: Docker + Repository" -ForegroundColor Gray
Write-Host "   - Frontend: Docker + Repository" -ForegroundColor Gray
Write-Host ""

Write-Host "üìö Documenta√ß√£o dispon√≠vel:" -ForegroundColor Cyan
Write-Host "   - GUIA_INSTALACAO_VPS_EASYPANEL.md" -ForegroundColor Gray
Write-Host "   - easypanel-config.md" -ForegroundColor Gray
Write-Host "   - RESUMO_DEPLOY_VPS.md" -ForegroundColor Gray
Write-Host ""

Write-Host "Sistema pronto para deploy na VPS!" -ForegroundColor Green 