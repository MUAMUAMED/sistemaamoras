const axios = require('axios');

// Token de teste (substitua por um token v√°lido se necess√°rio)
const token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiIxIiwiaWF0IjoxNzM1NzI5NjAwLCJleHAiOjE3MzU4MTYwMDB9.example';

async function testarValidacoes() {
  try {
    console.log('üîç Testando valida√ß√µes de c√≥digos...\n');

    // Teste 1: Validar c√≥digos existentes
    console.log('1Ô∏è‚É£ Testando API de valida√ß√£o de c√≥digos...');
    try {
      const response = await axios.get('http://https://amoras-sistema-gew1.gbl2yq.easypanel.host/api/barcode/validate-codes', {
        headers: { Authorization: `Bearer ${token}` }
      });
      console.log('‚úÖ API de valida√ß√£o funcionando!');
      console.log('üìä Resumo:', response.data.summary);
      if (response.data.invalid.length > 0) {
        console.log('‚ö†Ô∏è  C√≥digos inv√°lidos encontrados:', response.data.invalid.length);
      }
    } catch (error) {
      console.log('‚ùå Erro na API de valida√ß√£o:', error.response?.data || error.message);
    }

    // Teste 2: Tentar criar categoria com c√≥digo inv√°lido
    console.log('\n2Ô∏è‚É£ Testando valida√ß√£o de categoria com c√≥digo inv√°lido...');
    try {
      await axios.post('http://https://amoras-sistema-gew1.gbl2yq.easypanel.host/api/categories', {
        name: 'Teste Categoria Inv√°lida',
        code: 'ABC123', // C√≥digo inv√°lido (letras)
        description: 'Teste de valida√ß√£o'
      }, {
        headers: { Authorization: `Bearer ${token}` }
      });
      console.log('‚ùå Deveria ter falhado!');
    } catch (error) {
      if (error.response?.status === 400) {
        console.log('‚úÖ Valida√ß√£o funcionando! Erro:', error.response.data.message);
      } else {
        console.log('‚ùå Erro inesperado:', error.response?.data || error.message);
      }
    }

    // Teste 3: Tentar criar estampa com c√≥digo muito longo
    console.log('\n3Ô∏è‚É£ Testando valida√ß√£o de estampa com c√≥digo muito longo...');
    try {
      await axios.post('http://https://amoras-sistema-gew1.gbl2yq.easypanel.host/api/patterns', {
        name: 'Teste Estampa Longa',
        code: '12345', // C√≥digo muito longo (5 d√≠gitos)
        description: 'Teste de valida√ß√£o'
      }, {
        headers: { Authorization: `Bearer ${token}` }
      });
      console.log('‚ùå Deveria ter falhado!');
    } catch (error) {
      if (error.response?.status === 400) {
        console.log('‚úÖ Valida√ß√£o funcionando! Erro:', error.response.data.message);
      } else {
        console.log('‚ùå Erro inesperado:', error.response?.data || error.message);
      }
    }

    // Teste 4: Tentar criar tamanho com c√≥digo inv√°lido
    console.log('\n4Ô∏è‚É£ Testando valida√ß√£o de tamanho com c√≥digo inv√°lido...');
    try {
      await axios.post('http://https://amoras-sistema-gew1.gbl2yq.easypanel.host/api/sizes', {
        name: 'Teste Tamanho Inv√°lido',
        code: '999', // C√≥digo muito longo (3 d√≠gitos)
        active: true
      }, {
        headers: { Authorization: `Bearer ${token}` }
      });
      console.log('‚ùå Deveria ter falhado!');
    } catch (error) {
      if (error.response?.status === 400) {
        console.log('‚úÖ Valida√ß√£o funcionando! Erro:', error.response.data.message);
      } else {
        console.log('‚ùå Erro inesperado:', error.response?.data || error.message);
      }
    }

    console.log('\nüéâ Testes de valida√ß√£o conclu√≠dos!');

  } catch (error) {
    console.error('‚ùå Erro geral:', error.message);
  }
}

// Executar testes
testarValidacoes(); 